#!/usr/bin/env ruby

preprocess do
  include Custom

  @items.find_all("**/*.md").reject{|x| x.binary? }.each do |x|
    ["nl", "en"].each do |lang|
      content = filter_lang(x.raw_content.clone, lang)
      attributes = x.attributes.clone
      attributes[:lang] = lang
      attributes[:should_delete] = false

      identifier = "/"+lang+x.identifier

      @items.create(content, attributes, identifier)

      x.attributes[:should_delete] = true
    end
  end

  @items.delete_if {|i| i[:should_delete]}
end


ignore '/{verenigingen,projecten,konventen}/*.md'

compile '/{nl,en}/{verenigingen,projecten,konventen}/*.md' do
  filter :kramdown
  layout '/detail.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write ext: 'html'
end

compile '/{nl,en,fr}/themas/*' do
  layout '/thema.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write ext: 'html'
end

compile '/{nl,en,fr}/homepage.md' do
  filter :kramdown
  layout '/homepage.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write "/"+item[:lang]+ '/index.html'
end

compile '/{nl,en,fr}/verenigingen.md' do
  filter :kramdown
  layout '/verenigingen.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write item.identifier.without_ext + '/index.html'
end

compile '/{nl,en,fr}/quiz.md' do
  filter :kramdown
  layout '/quiz.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write item.identifier.without_ext + '/index.html'
end

compile '/{nl,en,fr}/search.md' do
  filter :kramdown
  layout '/search.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write item.identifier.without_ext + '/index.html'
end

compile '/{nl,en,fr}/faq.md' do
  filter :kramdown
  layout '/faq.*'
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write item.identifier.without_ext + '/index.html'
end

compile '/stylesheets/*.{sass,scss}' do
  syntax = @item.identifier.ext.to_sym
  filter :sass, syntax: syntax, style: :compact
  write ext: 'css'
end

compile '/*.erb' do
  filter :erb
  layout '/default.*'
  layout '/base.*'
  filter :relativize_paths, type: :html
  write item.identifier.without_ext + '/index.html'
end

layout '/**/*', :erb

# Catch-all
compile '/**/*' do
  write item.identifier.to_s
end
